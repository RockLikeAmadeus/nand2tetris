// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:

    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

    And(a=notsel0, b=notsel1, out=opt00);
    And(a=sel[0], b=notsel1, out=opt01);
    And(a=notsel0, b=sel[1], out=opt10);
    And(a=sel[0], b=sel[1], out=opt11);

    And(a=opt00, b=notsel2, out=opt0);
    And(a=opt01, b=notsel2, out=opt1);
    And(a=opt10, b=notsel2, out=opt2);
    And(a=opt11, b=notsel2, out=opt3);
    And(a=opt00, b=sel[2], out=opt4);
    And(a=opt01, b=sel[2], out=opt5);
    And(a=opt10, b=sel[2], out=opt6);
    And(a=opt11, b=sel[2], out=opt7);

    And(a=in, b=opt0, out=a);
    And(a=in, b=opt1, out=b);
    And(a=in, b=opt2, out=c);
    And(a=in, b=opt3, out=d);
    And(a=in, b=opt4, out=e);
    And(a=in, b=opt5, out=f);
    And(a=in, b=opt6, out=g);
    And(a=in, b=opt7, out=h);
}